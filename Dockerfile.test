ARG dyninst_base=ghcr.io/dyninst/dyninst-ubuntu-20.04:latest
FROM ${dyninst_base}

# docker build --build-arg dyninst_base=ghcr.io/dyninst/dyninst-ubuntu-20.04:latest -t dyninst-test .

# TODO update code here via dyninst source, if needed
# ADD . /code

# Clone dyninst tests
RUN git clone https://github.com/dyninst/testsuite /opt/testsuite

# Previous WORKDIR, just to be careful - reinstall dyninst if needed
# Thenbuild and run the test suite
WORKDIR /opt/dyninst-env
RUN . /opt/spack/share/spack/setup-env.sh && \
    spack env activate . && \
    mkdir -p build/dyninst && \

    # 1. Build Dyninst
    cd build/dyninst && \
    cmake -H/code -B. -DCMAKE_INSTALL_PREFIX=. > >(tee config.out) 2> >(tee config.err >&2) && \
    make VERBOSE=1 -j2 > >(tee build.out) 2> >(tee build.err >&2)                           && \
    make install VERBOSE=1 -j2 > >(tee build-install.out) 2> >(tee build-install.err >&2)   && \

    # 2. Build the test suite
    cd /opt/dyninst-env/                && \
    mkdir -p build/testsuite/tests      && \
    cd build/testsuite                  && \
    cmake -H/opt/testsuite -B. -DCMAKE_INSTALL_PREFIX=tests > >(tee config.out) 2> >(tee config.err >&2)  && \
    make VERBOSE=1 -j2 > >(tee build.out) 2> >(tee build.err >&2)                                         && \
    make install VERBOSE=1 -j2 > >(tee build-install.out) 2> >(tee build-install.err >&2                  && \

    # 3. Run the tests
    cd /opt/dyninst-env/build/testsuite/tests                                                             && \
    export DYNINSTAPI_RT_LIB=/opt/dyninst-env/build/dyninst/lib/libdyninstAPI_RT.so                       && \
    export OMP_NUM_THREADS=2                                                                              && \
    LD_LIBRARY_PATH=/opt/dyninst-env/build/dyninst/lib:$PWD:$LD_LIBRARY_PATH                              && \
    ./runTests -64 -all -log test.log -j1  1>stdout.log 2>stderr.log                                     

# Run the build script to collect and process the logs then upload them
# cd /opt/dyninst-env                                                                                   && \
# perl /opt/testsuite/scripts/build/build.pl --hostname=ci-github --quiet --restart=build --no-run-tests --upload --auth-token=xxxxxxxxxxxxxxxxxxx
